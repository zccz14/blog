{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","postsQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_post__WEBPACK_IMPORTED_MODULE_4__","_components_navigation__WEBPACK_IMPORTED_MODULE_5__","Index","_ref","data","_ref$pageContext","pageContext","nextPagePath","previousPagePath","posts","allMarkdownRemark","edges","a","createElement","Fragment","map","_ref2","node","id","autoExcerpt","excerpt","_node$frontmatter","frontmatter","title","date","path","author","coverImage","tags","key","previousPath","previousLabel","nextPath","nextLabel","propTypes","PropTypes","object","isRequired","shape","string"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,+BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAQMc,EAAQ,SAAAC,GAA+D,IAA5DC,EAA4DD,EAA5DC,KAA4DC,EAAAF,EAAtDG,YAAeC,EAAuCF,EAAvCE,aAAcC,EAAyBH,EAAzBG,iBAEpBC,EAC1BL,EADFM,kBAAqBC,MAGvB,OACEjB,EAAAkB,EAAAC,cAAAnB,EAAAkB,EAAAE,SAAA,KACEpB,EAAAkB,EAAAC,cAACf,EAAA,EAAD,MACAJ,EAAAkB,EAAAC,cAACd,EAAA,EAAD,KACGU,EAAMM,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEVC,EAWED,EAXFC,GACSC,EAUPF,EAVFG,QAHqBC,EAanBJ,EATFK,YACEC,EALmBF,EAKnBE,MACAC,EANmBH,EAMnBG,KACAC,EAPmBJ,EAOnBI,KACAC,EARmBL,EAQnBK,OACAC,EATmBN,EASnBM,WACAP,EAVmBC,EAUnBD,QACAQ,EAXmBP,EAWnBO,KAIJ,OACElC,EAAAkB,EAAAC,cAACb,EAAA,EAAD,CACE6B,IAAKX,EACLK,MAAOA,EACPC,KAAMA,EACNC,KAAMA,EACNC,OAAQA,EACRC,WAAYA,EACZC,KAAMA,EACNR,QAASA,GAAWD,MAK1BzB,EAAAkB,EAAAC,cAACZ,EAAA,EAAD,CACE6B,aAActB,EACduB,cAAc,cACdC,SAAUzB,EACV0B,UAAU,mBAOpB/B,EAAMgC,UAAY,CAChB9B,KAAM+B,IAAUC,OAAOC,WACvB/B,YAAa6B,IAAUG,MAAM,CAC3B/B,aAAc4B,IAAUI,OACxB/B,iBAAkB2B,IAAUI,UAIzB,IAAM/C,EAAU,YAiCRU","file":"component---src-templates-index-js-cd5e73b88fd8352e6598.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\nimport SEO from '../components/seo'\r\nimport Layout from '../components/layout'\r\nimport Post from '../components/post'\r\nimport Navigation from '../components/navigation'\r\n\r\nconst Index = ({ data, pageContext: { nextPagePath, previousPagePath } }) => {\r\n  const {\r\n    allMarkdownRemark: { edges: posts },\r\n  } = data\r\n\r\n  return (\r\n    <>\r\n      <SEO />\r\n      <Layout>\r\n        {posts.map(({ node }) => {\r\n          const {\r\n            id,\r\n            excerpt: autoExcerpt,\r\n            frontmatter: {\r\n              title,\r\n              date,\r\n              path,\r\n              author,\r\n              coverImage,\r\n              excerpt,\r\n              tags,\r\n            },\r\n          } = node\r\n\r\n          return (\r\n            <Post\r\n              key={id}\r\n              title={title}\r\n              date={date}\r\n              path={path}\r\n              author={author}\r\n              coverImage={coverImage}\r\n              tags={tags}\r\n              excerpt={excerpt || autoExcerpt}\r\n            />\r\n          )\r\n        })}\r\n\r\n        <Navigation\r\n          previousPath={previousPagePath}\r\n          previousLabel=\"Newer posts\"\r\n          nextPath={nextPagePath}\r\n          nextLabel=\"Older posts\"\r\n        />\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nIndex.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  pageContext: PropTypes.shape({\r\n    nextPagePath: PropTypes.string,\r\n    previousPagePath: PropTypes.string,\r\n  }),\r\n}\r\n\r\nexport const postsQuery = graphql`\r\n  query($limit: Int!, $skip: Int!) {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"//posts//\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM YYYY\")\r\n            path\r\n            author\r\n            excerpt\r\n            tags\r\n            coverImage {\r\n              childImageSharp {\r\n                fluid(maxWidth: 800) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Index\r\n"],"sourceRoot":""}